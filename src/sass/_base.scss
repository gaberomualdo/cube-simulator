@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');

// variables
$black: #000000;
$white: #ffffff;

$cube-green: rgb(99, 250, 119);
$cube-orange: rgb(249, 128, 42);
$cube-blue: rgb(58, 194, 254);
$cube-red: rgb(236, 97, 100);
$cube-white: rgb(227, 227, 219);
$cube-yellow: rgb(203, 247, 76);

$grey-base-color: #9db2b7;

$page-grey: lighten($grey-base-color, 27%);
$container-grey: lighten($grey-base-color, 32.5%);
$medium-grey: darken($grey-base-color, 11.5%);
$medium-light-grey: darken($grey-base-color, 0%);
$light-grey: lighten($grey-base-color, 3.75%);
$light-lightest-grey: lighten($grey-base-color, 11.5%);
$lightest-grey: lighten($grey-base-color, 19.25%);

// base sizes (similar to REM, but includes one for border radii as well)
$base-size: 16;
$br-base-size: 4;

// return multiples of base sizes (default as px, can return just number instead)
@function bsize($coefficient, $in-px: true) {
  @if $in-px {
    @return #{$coefficient * $base-size}px;
  }
  @return $coefficient * $base-size;
}

@function br-bsize($coefficient, $in-px: true) {
  @if $in-px {
    @return #{$coefficient * $br-base-size}px;
  }
  @return $coefficient * $br-base-size;
}

// page sizes
$page-mobile-width: 1000px;
$page-phone-width: 650px;

// page size mixins
@mixin in-mobile {
  @media only screen and (min-width: #{$page-phone-width + 1px}) and (max-width: $page-mobile-width) {
    @content;
  }
}
@mixin in-phone {
  @media only screen and (max-width: $page-phone-width) {
    @content;
  }
}
@mixin in-mobile-and-phone {
  @media only screen and (max-width: $page-mobile-width) {
    @content;
  }
}

// custom selection
::selection {
  background-color: rgba($medium-grey, 0.2);
}
